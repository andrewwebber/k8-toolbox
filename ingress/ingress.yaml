apiVersion: v1
kind: ReplicationController
metadata:
  name: default-http-backend
  namespace: kube-system
spec:
  replicas: 1
  selector:
    app: default-http-backend
  template:
    metadata:
      labels:
        app: default-http-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        # Any image is permissable as long as:
        # 1. It serves a 404 page at /
        # 2. It serves 200 on a /healthz endpoint
        image: gcr.io/google_containers/defaultbackend:1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: default-http-backend
  name: default-http-backend
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: default-http-backend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nghttpx-ingress-lb
  namespace: kube-system
data:
  nghttpx-conf: |
    insecure=yes
    server-name=void
    no-via=yes
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: nghttpx-ingress-lb
  namespace: kube-system
  annotations:
    rkt.alpha.kubernetes.io/stage1-name-override: coreos.com/rkt/stage1-fly
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: nghttpx-ingress-lb
        tier: ingress
    spec:
      hostNetwork: true
      terminationGracePeriodSeconds: 60
      containers:
      # - image: zlabjp/nghttpx-ingress-controller:v0.18.0
      - image: zlabjp/nghttpx-ingress-controller:v0.24.0
        name: nghttpx-ingress-lb
        # imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 11249
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        # use downward API
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        args:
        - /nghttpx-ingress-controller
        - --nghttpx-configmap=kube-system/nghttpx-ingress-lb
        - --default-backend-service=kube-system/default-http-backend
        - --logtostderr
        - --healthz-port=11249
